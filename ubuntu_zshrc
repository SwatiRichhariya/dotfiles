# Path to your oh-my-zsh installation.
export ZSH=/home/dborin/.oh-my-zsh

# Set name of the theme to load.
# Look in ~/.oh-my-zsh/themes/
# Optionally, if you set this to "random", it'll load a random theme each
# time that oh-my-zsh is loaded.
ZSH_THEME="dborin-bira"

# Uncomment the following line to use case-sensitive completion.
CASE_SENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# The optional three formats: "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

source $ZSH/oh-my-zsh.sh

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# ssh
# export SSH_KEY_PATH="~/.ssh/dsa_id"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

function startmux {
    if [[ "$TERM" != "screen" ]] && [[ "$SSH_CONNECTION" == "" ]]; then
      sessions=`tmux list-sessions`
      if [[ "$TMUX" = "" ]]; then
        if grep -q "dborin-main" <<< $sessions; then
          tmux attach -t dborin-main &> /dev/null
        else
          tmux new -s dborin-main
        fi
      fi
    fi
}

CURRENT_VIRTUALENV="env1"
export EDITOR=vim
stty erase '^?'

unalias ll 2>/dev/null

export HISTSIZE=50000
export HISTCONTROL=erasedups
export GREP_COLOR='1;37;46'

alias 1='fg %1'
alias 2='fg %2'
alias 3='fg %3'
alias 4='fg %4'
alias quit='exit'
alias bye='exit'
alias adios='exit'
alias ..="cd .."
alias ...="cd ../.."
alias ....="cd ../../.."
alias .....="cd ../../../.."
alias ls='ls -A --color'
alias ll='ls -lhA --color'
alias lf='ls -AF'
alias lt='ls -lArth --color'
alias ld='ls -dA'
alias h='history 100'
alias Cat='echo;cat'
alias env='env|sort'
alias ggbase='git log --graph --pretty=format:"%C(bold yellow)%h %Creset%C(cyan)(%cr)%Creset %C(bold red)%d%Creset%C(white) %s %Creset%C(green)[%cn]"'
alias gga='ggbase | more'
alias gg='ggbase -n `expr $LINES / 2` | more'
alias ggs='ggbase --stat | more'
alias takeover="tmux detach -a"
alias myubuntu="lsb_release -a"

export VIRTUALENVWRAPPER_PYTHON=/usr/bin/python
export WORKON_HOME=$HOME/.python_virtualenvs
source /usr/local/bin/virtualenvwrapper.sh
export PIP_VIRTUALENV_BASE=$WORKON_HOME
export PIP_RESPECT_VIRTUALENV=true

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(git)

export INTERACTIVE_SHELL=1
export LS_OPTIONS='--color=auto'
#export TERM="xterm-color"
#export TERM=xterm-256color
export CLICOLOR=1

# No ttyctl, so we need to save and then restore terminal settings
vim()
{
#    local STTYOPTS="$(stty --save)"
    stty stop '' -ixoff
    command vim "$@"
#    stty "$STTYOPTS"
}
vi()
{
#    local STTYOPTS="$(stty --save)"
    stty stop '' -ixoff
    command vim "$@"
#    stty "$STTYOPTS"
}

#has_virtualenv() {
#    if [ -e .venv ]; then
#        workon `cat .venv`
#    fi
#}
#venv_cd () {
#    cd "$@" && has_virtualenv
#}

#alias cd="venv_cd"

function goback {
    cd $OLDPWD
}
function hf {
    grep -n "$@" ~/.zsh_history | more
}
function vt {
    mvim --remote-tab $@ > /dev/null 2>&1
}
function mou {
    open -a Mou $@
}
function slow {
    top -o cpu
}
function chars {
    count=`echo $@ | wc -c`
    echo $(( $count-1 ))
}
function klone {
    git clone git@github.com:$@
}
function lsklone {
    git clone git@code.livingsocial.net:$@
}
function bootnova {
    nova boot --key-name dborin-nova_id_rsa --availability-zone=qateam $@
}
function r {
   fc -e - $@
}
function pu {
    pushd $@
}
function po {
    popd $@
}
function psg {
    /bin/ps -ea | egrep -i $1 | grep -v grep
}
function Find {
    /usr/bin/find . -name "*$1***" -a -print 2>/dev/null
}
function mancat {
    tbl $1:1 | neqn | nroff -man | col -b
}
function dfk {
    df -k $1
}

# get rid of unused kernal image files that take up space in /boot
function bootclean {
  dpkg -l linux-\* | awk '/^ii/{ print $2}' | grep -v -e `uname -r | cut -f1,2 -d"-"` | grep -e "[0-9]" | grep -E "(image|headers)" | xargs sudo apt-get -y purge
}

function make-install-disk {
    usage="\nmake-install-disk <location of .iso file> <location of USB drive (i.e. /dev/sdb)>\n"
    if [[ -z $1 ]] && [[ -z $2 ]];then
      echo -e "You're missing things (either the .iso file or the location of the USB drive\n$usage"
    else
      sudo dd if=$1| pv -petrb -s `ls -s --block-size=K $1 | cut -f1 -d" "` | sudo dd of=$2
    fi
}

# Automatically load the current Python virtualenv

python_autoenv () {
  workon $CURRENT_VIRTUALENV
}

python_autoenv
