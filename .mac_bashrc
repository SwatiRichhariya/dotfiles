# .bashrc

# The various escape codes that we can use to color our prompt.
         RED="\[\033[0;31m\]"
      YELLOW="\[\033[1;33m\]"
       GREEN="\[\033[0;32m\]"
        BLUE="\[\033[1;34m\]"
   LIGHT_RED="\[\033[1;31m\]"
 LIGHT_GREEN="\[\033[1;32m\]"
LIGHT_YELLOW="\[\033[1;93m\]"
       WHITE="\[\033[1;37m\]"
        CYAN="\[\033[0;36m\]"
  LIGHT_GRAY="\[\033[0;37m\]"
  COLOR_NONE="\[\e[0m\]"

CURRENT_VIRTUALENV="primary"
export EDITOR=vim
stty erase '^?'

unalias ll 2>/dev/null

export HISTSIZE=50000
export HISTCONTROL=erasedups
shopt -s histappend

alias 1='fg %1'
alias 2='fg %2'
alias 3='fg %3'
alias 4='fg %4'
alias quit='exit'
alias bye='exit'
alias adios='exit'
alias ..="cd .."
alias ...="cd ../.."
alias ....="cd ../../.."
alias .....="cd ../../../.."
alias ls='ls -A'
alias ll='ls -lhA'
alias lf='ls -AF'
alias lt='ls -lArth'
alias ld='ls -dA'
alias h='history 100'
alias Cat='echo;cat'
alias env='env|sort'

# Source global definitions
if [ -f /etc/bashrc ]; then
    . /etc/bashrc
fi

export VIRTUALENVWRAPPER_PYTHON=/usr/bin/python
export WORKON_HOME=$HOME/.python_virtualenvs
source /usr/local/bin/virtualenvwrapper.sh
export PIP_VIRTUALENV_BASE=$WORKON_HOME
export PIP_RESPECT_VIRTUALENV=true

# Lots of PATH malarky
unset PATH
PATH=/usr/local/bin:/usr/local/git/bin:/usr/bin:/bin:/usr/local/sbin:/usr/sbin:/sbin:/usr/X11/bin:./:../:../../:../../../
# [[ -s "$HOME/.rvm/scripts/rvm" ]] && source "$HOME/.rvm/scripts/rvm" # Load RVM into a shell session *as a function*
export PATH

# Set up a nifty prompt

function pwdPath {
    # How many characters of the $PWD should be kept
    local pwdmaxlen=40
    # Indicator that there has been directory truncation:
    local trunc_symbol="..."
    if [ ${#PWD} -gt $pwdmaxlen ]; then
        local pwdoffset=$(( ${#PWD} - $pwdmaxlen ))
        newPWD="${trunc_symbol}${PWD:$pwdoffset:$pwdmaxlen}"
    else
        newPWD=${PWD}
    fi
    echo $newPWD
}

function localmac {
    if [ $HOSTNAME == "US-DBORIN01-OSX.local" ];then
      echo 'ls-macbook'
    else
      echo $HOSTNAME
    fi
}

function ruby_version {
    echo `ruby -e "print RUBY_VERSION"`
}

function parse_git_branch {
    git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/\* \(.*\)/ (\1)/'
}

PS1="${RED}\$(ruby_version) ${BLUE}\$(pwdPath)\n${CYAN}\$(parse_git_branch)${LIGHT_GRAY} \t ${LIGHT_YELLOW}[\u@\$(localmac)]${COLOR_NONE} \\$ "
#export PS1="\n[\u@macbook] \$(pwdPath)\n\[\e[0;92m\]\$(parse_git_branch)\[\e[0m\] \t \\$ "
export INTERACTIVE_SHELL=1
export LS_OPTIONS='--color=auto'
export TERM="xterm-color"
export CLICOLOR=1
export LSCOLORS="Gxagexbxcxegedabacafad"

# bash
# No ttyctl, so we need to save and then restore terminal settings
vim()
{
#    local STTYOPTS="$(stty --save)"
    stty stop '' -ixoff
    command vim "$@"
#    stty "$STTYOPTS"
}
vi()
{
#    local STTYOPTS="$(stty --save)"
    stty stop '' -ixoff
    command vim "$@"
#    stty "$STTYOPTS"
}

has_virtualenv() {
    if [ -e .venv ]; then
        workon `cat .venv`
    fi
}
venv_cd () {
    cd "$@" && has_virtualenv
}

alias cd="venv_cd"

get_pw() {
    security 2>&1 >/dev/null find-generic-password -ga $1\
    |ruby -e 'print $1 if STDIN.gets =~ /^password: "(.*)"$/'
}
function update-selenium {
    gem update selenium-webdriver
    sudo pip install --upgrade selenium
}
function goback {
    cd $OLDPWD
}
function vt {
    mvim --remote-tab $@ > /dev/null 2>&1
}
function mou {
    open -a Mou $@
}
function slow {
    top -o cpu
}
function chars {
    count=`echo $@ | wc -c`
    echo $(( $count-1 ))
}
function r {
   fc -e - $@
}
function pu {
    pushd $@
}
function po {
    popd $@
}
function psg {
    /bin/ps -ea | egrep -i $1 | grep -v grep
}
function Find {
    /usr/bin/find . -name "*$1***" -a -print 2>/dev/null
}
function mancat {
    tbl $1:1 | neqn | nroff -man | col -b
}
function dfk {
    df -k $1
}

# Automatically load the current Python virtualenv

python_autoenv () {
  workon $CURRENT_VIRTUALENV
}

python_autoenv
